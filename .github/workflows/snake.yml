# GitHub Action for generating a contribution graph with a snake eating your contributions.

name: Generate Snake

# Controls when the action will run. This action runs every 24 hours.
on:
  schedule:
    # every 24 hours
    - cron: "0 */24 * * *"
  # This command allows us to run the Action automatically from the Actions tab.
  workflow_dispatch:
  # On changes
  push:
    branches:
      - main

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: write
    timeout-minutes: 5

    steps:
      # Checks repo under $GITHUB_WORKSHOP, so your job can access it
      - uses: actions/checkout@v2

      # Generates the snake with a UNIQUE placeholder color for the snake (#000001)
      # We'll replace this with a gradient in the next step.
      - uses: Platane/snk/svg-only@v3
        id: snake-gif
        with:
          github_user_name: ${{ github.repository_owner }}
          # files go to dist/; we'll publish them from there
          outputs: |
            dist/github-contribution-grid-snake.svg?color_snake=%23000001
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark&color_snake=%23000001
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Inject a linear gradient and replace the placeholder color with it
      - name: Make snake gradient (magenta âžœ teal)
        shell: bash
        run: |
          set -euo pipefail
          for f in dist/*.svg; do
            # Insert gradient defs right after the opening <svg ...> tag (first occurrence only)
            sed -i '0,/<svg[^>]*>/s//&\
  <defs>\
    <linearGradient id="snakeGrad" x1="0%" y1="0%" x2="100%" y2="0%">\
      <stop offset="0%" stop-color="#f65ee0"/>\
      <stop offset="100%" stop-color="#0CFFD2"/>\
    </linearGradient>\
  </defs>/' "$f"

            # Replace placeholder #000001 (used for the snake) with the gradient
            sed -i 's/fill="#000001"/fill="url(#snakeGrad)"/g' "$f"
            sed -i 's/stroke="#000001"/stroke="url(#snakeGrad)"/g' "$f"
          done

      # show the status of the build. Makes it easier for debugging (if there's any issues).
      - run: git status

      # Push the images to the output branch
      - uses: crazy-max/ghaction-github-pages@v3.1.0
        with:
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
